#summary An Application Context be used to store bindable cross-component model objects

= Introduction =

When building large Flex applications it is a good practice to separate functionality into different Flex Library components (swc). If your design requires shared objects created in your component and be available to the containing application then you need a shared context. Class ApplicationContext provides this functionality by shared a current sole instance to the application and all its required components. In addition, each context entry  is bindable. This means that if the value of the entry changes, all dependent UI component will be notified and are updated.

= Details =
{{{
ApplicationContext.current.put('shoppingcard', aShoppingCard)
}}}