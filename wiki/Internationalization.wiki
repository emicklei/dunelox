#summary Using class NLS for language dependent labels, messages and formats

= Introduction =

Flex provides the class ResourceBundle to access properties stored in a file as part of the compiled application (SWF). To simplify this access and to provide runtime changing a language, the class NLS can be used.

= Examples =

Suppose you have to the resource nls.us.properties with contents:
{{{
label.file=File
label.filenotfound=File {0} cannot be found
nls.dateformat=YYYY/MM/DD
}}}
Set the provider of NLS to US by:
{{{
NLS.setProvider(new NLSResourceBundle_US())
}}}
Then the following expressions can be used:
{{{
NLS.text('label.file') => 'File'
NLS.expandText('label.filenotfound', '/where.doc') => 'File /where.doc cannot be found'
NLS.date(new Date()) =>  1967/11/20
}}}
An example of using NLS in an MXML component is:
{{{
<mx:Label text={NLS.text('label.name')} />
}}}
= Tools =
To keep track of the keys using in NLS expression you can install the NLSRecorder and use its NLSRecordingView. The recorder will collect the list of keys for which no entry was found in the resource (nls.properties). This list can be viewed using the NLSRecordingView. Typically, this view is opened when the application is run in debug-mode.
{{{
NLS.setProvider(new NLSRecorder(new NLSResourceBundle_US())
}}}

===Tips===
* Define a provider for your own language by subclassing NLSProvider