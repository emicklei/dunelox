#summary Using class NLS for language dependent labels, messages and formats

= Introduction =

Flex provides the class ResourceBundle to access properties stored in a file as part of the compiled application (SWF). To simplify this access and to provide runtime changing a language, the class NLS can be used.

= Examples =

Suppose you have to the resource nls.us.properties with contents:
{{{
label.file=File
label.filenotfound=File {0} cannot be found
nls.dateformat=YYYY/MM/DD
}}}
Set the provider of NLS to language US by:
{{{
NLS.setProvider(new NLSResourceBundle_US())
}}}
Then the following expressions can be used:
{{{
NLS.text('label.file') => 'File'
NLS.expandText('label.filenotfound', '/where.doc') => 'File /where.doc cannot be found'
NLS.date(new Date()) =>  1967/11/20
Alert.show(NLS.text('msg.notauthorized')) => shows an alert box with an internationalized message
}}}
NLS can handle missing entries for keys:
{{{
NLS.text('column.name') => returns 'columns.name' if that key is absent
NLS.text('column.name', 'Name') => returns 'Name' if that key is absent
}}}
Examples of using NLS in an MXML component:
{{{
<mx:Label text={NLS.text('label.name')} />
<mx:DataGridColumn headerText="{NLS.text('column.email','Email')}" dataField="email" />
}}}
= Tools =
To keep track of the keys used in NLS expressions you can install the NLSRecorder. The recorder will collect the list of keys for which no entry was found in the resource (nls.properties). This list can be viewed using the NLSRecordingView. Typically, the recorder is installed when the application is run in debug-mode.
{{{
var isDebug:Boolean = Application.application.url.indexOf('debug') > 0
if (isDebug) {
  NLS.setProvider(new RecordingNLSProvider(new NLSResourceBundle_US()))
} else {
  NLS.setProvider(new NLSResourceBundle_US()) 
}
}}}
Then you can open the View:
{{{
RecordingNLSWindow.show(Application.application as DisplayObject)
}}}

===Tips===
* Define a provider for your own language by subclassing NLSProvider