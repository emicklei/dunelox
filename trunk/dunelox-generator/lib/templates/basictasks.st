<?xml version="1.0" encoding="utf-8"?>
<!-- 	$class$BasicTasks is generated by Flexolop FlexGenerator on $timestamp$ -->

<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%">
	<mx:Metadata>
		[Event(name="$model$Changed")]
	</mx:Metadata>

	<mx:VBox left="4" top="4">
		<mx:Button label="{NLS.text('button.new','New...')}" width="100" click="doCreate()" />
		<mx:Button label="{NLS.text('button.copy','Copy...')}" width="100" click="doCopy()" enabled="{selected$class$ != null}"/>			
		<mx:Button label="{NLS.text('button.modify','Modify...')}" width="100" click="doModify()" enabled="{selected$class$ != null}"/>
		<mx:Button label="{NLS.text('button.delete','Delete')}" width="100" click="doDelete()" enabled="{selected$class$ != null}"/>
	</mx:VBox>
	
	<mx:Script>
		<![CDATA[
			import $packageroot$.models.$class$;
			import $packageroot$.usecases.NewEditCopyDestroy$class$;
			import com.philemonworks.flex.util.UseCase;
			import mx.core.Application;
			import com.philemonworks.flex.nls.NLS;
			
			[Bindable]
			public var selected$class$:Object
					
			public function doRefresh(useCase:UseCase = null):void {
				this.dispatchEvent(new Event("$model$Changed"))
			}
			private function createNewEditCopyDestroy$class$(action:String):NewEditCopyDestroy$class$ {
				var necod:NewEditCopyDestroy$class$ = new NewEditCopyDestroy$class$()
				necod.action = action
				if (selected$class$ != null) 
					necod.$model$ = new $class$(XML(selected$class$))
				return necod
			}
			public function doCreate():void {
				var necod:NewEditCopyDestroy$class$ = this.createNewEditCopyDestroy$class$(NewEditCopyDestroy$class$.NEW)
				necod.start(Application.application as DisplayObject,doRefresh)
			}			
			public function doCopy():void {
				var necod:NewEditCopyDestroy$class$ = this.createNewEditCopyDestroy$class$(NewEditCopyDestroy$class$.COPY)
				necod.start(Application.application as DisplayObject,doRefresh)				
			}			
			public function doModify():void {
				var necod:NewEditCopyDestroy$class$ = this.createNewEditCopyDestroy$class$(NewEditCopyDestroy$class$.EDIT)
				necod.start(Application.application as DisplayObject,doRefresh)				
			}
			public function doDelete():void {
				var necod:NewEditCopyDestroy$class$ = this.createNewEditCopyDestroy$class$(NewEditCopyDestroy$class$.DESTROY)
				necod.start(Application.application as DisplayObject,doRefresh)				
			}			
		]]>
	</mx:Script>
</mx:Canvas>
