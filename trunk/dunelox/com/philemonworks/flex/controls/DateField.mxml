<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="24" xmlns:ns1="com.philemonworks.flex.controls.*" xmlns:util="com.philemonworks.flex.util.*">
	<ns1:DayField  id="dayField" width="65%" height="100%" day="{_day}" />
	<ns1:TimeField id="timeField" width="35%" height="100%" change="timeChanged()" />
	<util:Observe source="{_day}" handler="dayChanged" />
	<mx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import com.philemonworks.flex.util.Time;
			import com.philemonworks.flex.util.Day;
			
			[Event(name="change", type="mx.events.FlexEvent")]
			[DefaultBindingProperty(source="selectedDate", destination="selectedDate")]
			[DefaultTriggerEvent("change")]
			
			[Bindable]
			private var _day:Day;
					
			[Bindable]
			public var yearNavigationEnabled:Boolean = true;
			
			public function dayChanged():void {		
				this.updateSelectedDate()	
			}			
			public function timeChanged():void {
				this.updateSelectedDate()
			}
		    /**
		     *  @private
		     *  Storage for the selectedDate property.
		     */
		    private var _selectedDate:Date = null;			
    		private var selectedDateChanged:Boolean = false;

			[Bindable("change")]
		    [Bindable("valueCommit")]
		    [Inspectable(category="General")]			
			
		    public function get selectedDate():Date
		    {
		        return _selectedDate;
		    }
		    public function set selectedDate(value:Date):void
		    {
		        _selectedDate = value;
				dayField.day = Day.fromDate(_selectedDate)
				timeField.time = Time.fromDate(_selectedDate)		        
		        selectedDateChanged = true;		
		        invalidateProperties();
		    }
		    private function updateSelectedDate():void {
		    	// read time and day values to create Date
		    	var when:Date = _day.toDate()
		    	// update Time
		    	when.seconds = (timeField.time.seconds)
		    	selectedDate = when
		    }
		]]>
	</mx:Script>
</mx:HBox>
