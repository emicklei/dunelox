<?xml version="1.0" encoding="utf-8"?>
<!-- 	$class$Form is generated by Flexolop FlexGenerator on $timestamp$ -->

<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%">
	<mx:Metadata>
		[Event(name="$model$Save",type="com.philemonworks.flex.events.ObjectDataEvent")]
		[Event(name="$model$Revert",type="com.philemonworks.flex.events.ObjectDataEvent")]
		[Event(name="$model$Apply",type="com.philemonworks.flex.events.ObjectDataEvent")]
		[Event(name="$model$Cancel",type="com.philemonworks.flex.events.ObjectDataEvent")]	
	</mx:Metadata>
	<mx:Form>
		<mx:FormHeading label="{NLS.text('$model$form','$class$ Form')}" />
$formitems$
	</mx:Form>	
	<mx:Spacer height="12" />
	<mx:HBox width="100%" horizontalAlign="right" horizontalGap="4">
		<mx:Button id="revertButton" label="{NLS.text('button.revert','Revert')}" click="requestForRevert()" enabled="{changed}"/>				
		<mx:Button id="applyButton" label="{NLS.text('button.apply','Apply')}" click="requestForApply()" />	
		<mx:Button id="cancelButton" label="{NLS.text('button.cancel','Cancel')}" click="requestForCancel()" />	
		<mx:Button id="saveButton" label="{NLS.text('button.ok','Ok')}" click="requestForSave()" />	
		<mx:Spacer width="12" />	
	</mx:HBox>
	<mx:Spacer height="12" />	
	<!-- Formatters -->
$fieldformatters$
	<!-- Validators -->
$fieldvalidators$
	<mx:Script>
		<![CDATA[
			import com.philemonworks.flex.util.Day;
			import com.philemonworks.flex.events.ObjectDataEvent;
			import com.philemonworks.flex.nls.NLS;	
			import $packageroot$.models.$class$;
			
			[Bindable]
			public var $model$:$packageroot$.models.$class$;	
			[Bindable]
			public var changed:Boolean = false;
			
			private function updateFromInputs():void {
$fields2vars$			
			}			
			public function requestForRevert():void {
				// pass the id as data so any handler knows which $model$ to fetch
				this.dispatchEvent(new ObjectDataEvent("$model$Revert",$model$.id))
			}
			public function requestForApply():void {
				this.updateFromInputs()
				this.dispatchEvent(new ObjectDataEvent("$model$Apply",$model$))
			}
			public function requestForCancel():void {
				this.dispatchEvent(new ObjectDataEvent("$model$Cancel"))
			}
			public function requestForSave():void {
				this.updateFromInputs()		
				this.dispatchEvent(new ObjectDataEvent("$model$Save",$model$))
			}																
		]]>
	</mx:Script>
</mx:VBox>